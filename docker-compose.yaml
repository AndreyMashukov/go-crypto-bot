version: '3.5'

services:
  writer:
    build: '.'
    container_name: go_crypto_bot
    networks:
      - bot-net
    ports:
      - "8090:8080"
    restart: always
    depends_on:
      - mysql
    #environment:
      # your backend here
    volumes:
      - ./trade.log:/go/src/app/trade.log
      - ./kline.log:/go/src/app/kline.log

  front:
    image: 'registry.gitlab.com/open-soft/crypto-bot-front'
    container_name: go_crypto_bot_front
    networks:
      - bot-net
    ports:
      - "8010:3000"
    restart: always
    depends_on:
      - writer

  mysql:
    platform: linux/x86_64
    image: mysql:5.7
    restart: unless-stopped
    ports:
      - "3366:3306"
    networks:
      - bot-net
    environment:
      MYSQL_ROOT_PASSWORD: go_crypto_bot
      MYSQL_DATABASE: go_crypto_bot
      MYSQL_USER: go_crypto_bot
      MYSQL_PASSWORD: go_crypto_bot
    volumes:
      - mysql-data:/var/lib/mysql

    # Redis
  redis:
    image: redis:5.0.5-alpine
    networks:
      - bot-net
    volumes:
      - ./.docker/data/redis:/data:delegated
#    ports:
#      - 6379:6379
    cap_add:
      - SYS_TIME
    restart: always

networks:
  bot-net:
    driver: bridge

volumes:
  mysql-data:
    name: go_crypto_bot_mysql_data
